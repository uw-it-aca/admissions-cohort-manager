---
# Source: django-production-chart/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: admissions-cohort-manager-prod-%!s(<nil>)
  labels:
    app.kubernetes.io/name: django-production-chart
    helm.sh/chart: django-production-chart-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Tiller
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name:  admissions-cohort-manager-prod-%!s(<nil>) 
    app.kubernetes.io/instance: release-name

---
# Source: django-production-chart/templates/deployment.yaml
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: admissions-cohort-manager-prod-%!s(<nil>)
  labels:
    app.kubernetes.io/name: admissions-cohort-manager-prod-%!s(<nil>)
    helm.sh/chart: django-production-chart-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Tiller
spec:


  selector:
    matchLabels:
      app.kubernetes.io/name: admissions-cohort-manager-prod-%!s(<nil>)
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: admissions-cohort-manager-prod-%!s(<nil>)
        app.kubernetes.io/instance: release-name
    spec:
      
      volumes:
        - name: certs-volume
          secret:
            secretName: "aat-uwca"
      containers:
        - name: admissions-cohort-manager-prod-%!s(<nil>)
          image: "acait/django-contianer:eabc3212"
          imagePullPolicy: "Always"
          volumeMounts:
            - name: certs-volume
              readOnly: true
              mountPath: "/certs"
          resources:
                limits:
                  cpu: 500m
                  memory: 1024Mi
                requests:
                  cpu: 100m
                  memory: 512Mi
                
          env:
            - name: CERT_PATH
              value: "/certs/aat.axdd.s.uw.edu-uwca.pem"
            - name: KEY_PATH
              value: "/certs/aat.axdd.s.uw.edu-uwca.key"
            - name: DB
              value: "postgres"
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: aat-db-test-credentials
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aat-db-test-credentials
                  key: password
            - name: ENV
              value: "prod"
            - name: PORT
              value: "8080"
            - name: DATABASE_DB_NAME
              value: "aat-db-test"
            - name: DATABASE_HOSTNAME
              value: "aat-db-test"
            - name: ENV
              value: dev
            - name: PORT
              value: "8080"
            
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
---
# Source: django-production-chart/templates/deploy.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "release-name"
  labels:
    app.kubernetes.io/managed-by: "Tiller"
    app.kubernetes.io/instance: "release-name"
    helm.sh/chart: "django-production-chart-0.1.0"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
apiVersion: batch/v1
kind: Job
metadata:
  name: admissions-cohort-manager-prod-%!s(<nil>)-release-job-eabc321-tg7
  labels:
    app.kubernetes.io/name: admissions-cohort-manager-prod-%!s(<nil>)
    helm.sh/chart: django-production-chart-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Tiller
spec:
  backoffLimit: 1
  template:
    metadata:
      name: "release-name"
      labels:
        app.kubernetes.io/managed-by: "Tiller"
        app.kubernetes.io/instance: "release-name"
        helm.sh/chart: "django-production-chart-0.1.0"
    spec:
      restartPolicy: "Never"
      
      volumes:
        - name: certs-volume
          secret:
            secretName: "aat-uwca"
      containers:
        - name: admissions-cohort-manager-prod-%!s(<nil>)
          image: "acait/django-contianer:eabc3212"
          imagePullPolicy: "Always"
          volumeMounts:
            - name: certs-volume
              readOnly: true
              mountPath: "/certs"
          resources:
                limits:
                  cpu: 500m
                  memory: 1024Mi
                requests:
                  cpu: 100m
                  memory: 512Mi
                
          env:
            - name: CERT_PATH
              value: "/certs/aat.axdd.s.uw.edu-uwca.pem"
            - name: KEY_PATH
              value: "/certs/aat.axdd.s.uw.edu-uwca.key"
            - name: DB
              value: "postgres"
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: aat-db-test-credentials
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aat-db-test-credentials
                  key: password
            - name: ENV
              value: "prod"
            - name: PORT
              value: "8080"
            - name: DATABASE_DB_NAME
              value: "aat-db-test"
            - name: DATABASE_HOSTNAME
              value: "aat-db-test"
            - name: ENV
              value: dev
            - name: PORT
              value: "8080"
            
          command: ["/scripts/deploy.sh"]
          
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
---
# Source: django-production-chart/templates/ingress.yaml

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: release-name-django-production-chart
  labels:
    app.kubernetes.io/name: django-production-chart
    helm.sh/chart: django-production-chart-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Tiller
spec:
  tls:
    - hosts:
        - "aat-test.axdd.s.uw.edu"
      secretName: aat-test.axdd.s.uw.edu
  rules:
    - host: "aat-test.axdd.s.uw.edu"
      http:
        paths:
          - path: /
            backend:
              serviceName: admissions-cohort-manager-prod-%!s(<nil>)
              servicePort: http
---
# Source: django-production-chart/templates/autoscaler.yaml
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: admissions-cohort-manager-prod-%!s(<nil>)-autoscaler
  namespace: default
  labels:
    app.kubernetes.io/name: admissions-cohort-manager-prod-%!s(<nil>)
    helm.sh/chart: django-production-chart-0.1.0
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Tiller
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: admissions-cohort-manager-prod-%!s(<nil>)
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 50

---
# Source: django-production-chart/templates/cronjob.yaml

---
# Source: django-production-chart/templates/external-service.yaml

---
# Source: django-production-chart/templates/service-monitor.yaml


